map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(method = "lm")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(method = "lm", se = FALSE)
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "loess")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "auto")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "glm")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "gam")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "loess")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "loess", na.rm = TRUE)
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "loess", na.rm = TRUE)
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
map2
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
print(map2 + ggtitle("Number of Injured Against Killed" + labs(y="Number of Injured", x = "Number of Killed")))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed")))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm")
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x)
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(method = "lm", formula=y~x)
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_line(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x)
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
library(lintr)
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
knitr::kable(city_analysis, caption = "Average Number of Killed & Injured per Shooting")
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
map2 <- print(map2 + labs(title = "Number of Injured Against Killed", y="Number of Injured", x = "Number of Killed"))
## Summary Information
knitr::opts_chunk$set(echo = TRUE)
source("analysis.R")
library("knitr")
knitr::kable(city_analysis, caption = "Average Number of Killed & Injured per Shooting")
knitr::opts_chunk$set(echo = TRUE)
source("analysis.R")
library("knitr")
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- kable(city_analysis, caption = "Average Number of Killed & Injured per Shooting")
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
View(city_analysis_table)
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- knitr::kable(city_analysis,
caption = "Average Number of People Injured & Killed Per City")
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
date <- df %>%
summarize(date[max(num_killed)])
View(date)
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- knitr::kable(city_analysis,
caption = "Average Number of People Injured & Killed Per City")
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
date2 <- paste("Date: ", (df$date))
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- knitr::kable(city_analysis,
caption = "Average Number of People Injured & Killed Per City")
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date2 <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
source("analysis.R")
city_analysis_table
date <- df %>%
summarize(date[max(num_killed)])
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- knitr::kable(city_analysis,
caption = "Average Number of People Injured & Killed Per City")
date <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date2 <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- knitr::kable(city_analysis,
caption = "Average Number of People Injured & Killed Per City")
date_of_event <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date2 <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
Through this table. we gain the insight that Pompano Beach has not only the maximum number of people killed per shooting averagely but also the maximum number of people injured per shoooting averagely. We can see the first 4 rows are the extreme values of number of people killed on average as these 4 cities are the only ones who have values that is over 10. For the 4 extreme valued cities, most of the cities have similar value of number of people being killed and injured except for the exception of the city Thousand Oaks. As for the cities that have an average of number of people killed below 10, most of the data shows a big difference between number of killed and number of injured. However, there are limitations for the following representation of data. The extreme values can be explained by the city having only one shooting event while other cities have more than one shooting throughout 2018, in which more shootings tends to lower the average number of people killed and injured. An example that shows this example would be the city of York, which is at the last row of the table while it has been shown York has the most shootings through 2018.
## Description of a Particular Incident
The particular incident that will be focused on would be the one located at Pompano Beach with the most people killed and injured. The incident occured at `r date_of_event` and it happened at `r address`, `r city`, `r state`. The total number of people killed is `r number_killed` and the total number of people injured is `r number_injured`. This particular incident occurred inside Marjory Stoneman Douglas High School. This is the deadliest high school shooting in United States history.
Link to Additional Information: <https://en.wikipedia.org/wiki/Stoneman_Douglas_High_School_shooting>
library(dplyr)
library(knitr)
library(tidyr)
library(leaflet)
library(ggplot2)
df <- read.csv(file = "data/shootings-2018.csv", stringsAsFactors = FALSE)
total_events <- nrow(df)
lives_lost <- sum(df$num_killed)
impacted_city <- df %>%
summarize(most_impacted_city = max(city))
impacted_state <- df %>%
summarize(most_impacted_state = max(state))
average_lives <- df %>%
summarize(average_lives_lost = mean(num_killed))
city_analysis <- df %>%
group_by(city) %>%
summarize(mean_killed_per_city = mean(num_killed), mean_injured_per_city = mean(num_injured)) %>%
arrange(desc(mean_killed_per_city))
city_analysis_table <- knitr::kable(city_analysis,
caption = "Average Number of People Injured & Killed Per City")
date_of_event <- df %>%
summarize(date[max(num_killed)])
address <- df %>%
summarize(address[max(num_killed)])
city <- df %>%
summarize(city[max(num_killed)])
state <- df %>%
summarize(state[max(num_killed)])
number_killed <- df %>%
summarize(num_killed[max(num_killed)])
number_injured <- df %>%
summarize(num_injured[max(num_killed)])
date2 <- paste("Date: ", (df$date))
location <- paste("Address: ",(df$address),", ", (df$city),", ",(df$state), sep = "")
total_number_killed <- paste("Number of People Killed: ", (df$num_killed))
total_number_injured <- paste("Number of People Injured: ", (df$num_injured))
details <- paste(sep = "\n", location,"<br>",
total_number_killed, "<br>",
total_number_injured)
df <- df %>%
mutate( total = df$num_killed + df$num_injured)
map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = df$long, lat = df$lat, radius = df$total,
label = lapply(details, htmltools::HTML))
map2 <- ggplot(data = df) +
geom_point(mapping = aes(x = df$num_killed, y = df$num_injured)) +
geom_smooth(mapping = aes(x = df$num_killed, y = df$num_injured), method = "lm", formula=y~x, se = FALSE)
View(date_of_event)
library(lintr)
